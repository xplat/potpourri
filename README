* AltEquality.agda - A sort of Church-encoded propositional equality.

* Altivec.agda - Vecs with eta.

* CantCountCantor.agda - 2^&#x2135;₀ ≠ &#x2135;₀.

* Denum.agda - Equality and ordering from an injection into the naturals.

* Golforth.hs - Point-free Haskell the Forth way.

* IxNat.agda - A small sample of what first-class ornaments would be like?

* IxNatEx.agda - IxNat.agda in action: naturals indexed by parity, Even and Odd.

* patmv.pl - Rename multiple files with regex replacements.

* PatriciaTrie.agda - Bitvector-indexed tries.

  A response to http://www.reddit.com/r/dependent_types/comments/qmlml/patricia_trie_challenge/ .

* Primes/ - Fast (relatively speaking) Sieve of Eratosthenes in Agda

  Currently unproven, but can compute primes at least as high as 2741 practically by normalization in Emacs.  The files FastNat.agda and Heap.agda seem especially likely to be reusable by other projects.

* Trie.hs - Is Haskell more readable than python?

  A response to some other reddit post comparing readability of Haskell and python in the case of tries.
